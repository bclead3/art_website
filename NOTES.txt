

##### DEVISE

% be rails generate devise:install
create  config/initializers/devise.rb
create  config/locales/devise.en.yml
===============================================================================

Depending on your application's configuration some manual setup may be required:

1. Ensure you have defined default url options in your environments files. Here
   is an example of default_url_options appropriate for a development environment
   in config/environments/development.rb:

   config.action_mailer.default_url_options = { host: 'localhost', port: 3000 }

   In production, :host should be set to the actual host of your application.

    * Required for all applications. *

2. Ensure you have defined root_url to *something* in your config/routes.rb.
   For example:

   root to: "home#index"

    * Not required for API-only Applications *

3. Ensure you have flash messages in app/views/layouts/application.html.erb.
   For example:

     <p class="notice"><%= notice %></p>
     <p class="alert"><%= alert %></p>

    * Not required for API-only Applications *

4. You can copy Devise views (for customization) to your app by running:

   rails g devise:views

    * Not required *

===============================================================================




% be rails g devise:views
      invoke  Devise::Generators::SharedViewsGenerator
      create    app/views/devise/shared
      create    app/views/devise/shared/_error_messages.html.erb
      create    app/views/devise/shared/_links.html.erb
      invoke  form_for
      create    app/views/devise/confirmations
      create    app/views/devise/confirmations/new.html.erb
      create    app/views/devise/passwords
      create    app/views/devise/passwords/edit.html.erb
      create    app/views/devise/passwords/new.html.erb
      create    app/views/devise/registrations
      create    app/views/devise/registrations/edit.html.erb
      create    app/views/devise/registrations/new.html.erb
      create    app/views/devise/sessions
      create    app/views/devise/sessions/new.html.erb
      create    app/views/devise/unlocks
      create    app/views/devise/unlocks/new.html.erb
      invoke  erb
      create    app/views/devise/mailer
      create    app/views/devise/mailer/confirmation_instructions.html.erb
      create    app/views/devise/mailer/email_changed.html.erb
      create    app/views/devise/mailer/password_change.html.erb
      create    app/views/devise/mailer/reset_password_instructions.html.erb
      create    app/views/devise/mailer/unlock_instructions.html.erb


% be rails g devise User
      invoke  active_record
      create    db/migrate/20230412050132_devise_create_users.rb
      create    app/models/user.rb
      invoke    test_unit
      create      test/models/user_test.rb
      create      test/fixtures/users.yml
      insert    app/models/user.rb
       route  devise_for :users



https://hackernoon.com/using-devise-in-your-ruby-on-rails-application-a-step-by-step-guide-m92i3y5s



% be rails generate active_admin:install
      invoke  devise
    generate    No need to install devise, already done.
      invoke    active_record
      create      db/migrate/20230412052241_devise_create_admin_users.rb
      create      app/models/admin_user.rb
      invoke      test_unit
      create        test/models/admin_user_test.rb
      create        test/fixtures/admin_users.yml
      insert      app/models/admin_user.rb
       route    devise_for :admin_users
        gsub    app/models/admin_user.rb
        gsub    config/routes.rb
      append    db/seeds.rb
    conflict  config/initializers/active_admin.rb
Overwrite /Users/benleadholm/Projects/SaraWebsite/sarasite/config/initializers/active_admin.rb? (enter "h" for help) [Ynaqdhm] Y
       force  config/initializers/active_admin.rb
       exist  app/admin
   identical  app/admin/dashboard.rb
      create  app/admin/admin_users.rb
File unchanged! The supplied flag value not found!  config/routes.rb
    generate  active_admin:assets
       rails  generate active_admin:assets
   identical  app/assets/javascripts/active_admin.js
   identical  app/assets/stylesheets/active_admin.scss
   identical  db/migrate/20230412043444_create_active_admin_comments.rb





# # frozen_string_literal: true
#
# class DeviseCreateUsers < ActiveRecord::Migration[7.0]
#   def change
#     create_table :users do |t|
#       ## Database authenticatable
#       t.string :email,              null: false, default: ''
#       t.string :encrypted_password, null: false, default: ''
#       t.string :first_name,         null: false, default: ''
#       t.string :last_name,          null: false, default: ''
#
#       ## Recoverable
#       t.string   :reset_password_token
#       t.datetime :reset_password_sent_at
#
#       ## Rememberable
#       t.datetime :remember_created_at
#
#       ## Trackable
#       t.integer  :sign_in_count, default: 0, null: false
#       t.datetime :current_sign_in_at
#       t.datetime :last_sign_in_at
#       t.string   :current_sign_in_ip
#       t.string   :last_sign_in_ip
#
#       ## Confirmable
#       # t.string   :confirmation_token
#       # t.datetime :confirmed_at
#       # t.datetime :confirmation_sent_at
#       # t.string   :unconfirmed_email # Only if using reconfirmable
#
#       ## Lockable
#       t.integer  :failed_attempts, default: 0, null: false # Only if lock strategy is :failed_attempts
#       t.string   :unlock_token # Only if unlock strategy is :email or :both
#       t.datetime :locked_at
#
#       t.timestamps null: false
#     end
#
#     add_index :users, :email,                unique: true
#     add_index :users, :reset_password_token, unique: true
#     # add_index :users, :confirmation_token,   unique: true
#     add_index :users, :unlock_token,         unique: true
#   end
# end

% be rake db:migrate
== 20230412052241 DeviseCreateAdminUsers: migrating ===========================
-- create_table(:admin_users)
   -> 0.0047s
-- add_index(:admin_users, :email, {:unique=>true})
   -> 0.0012s
-- add_index(:admin_users, :reset_password_token, {:unique=>true})
   -> 0.0007s
-- add_index(:admin_users, :unlock_token, {:unique=>true})
   -> 0.0010s
== 20230412052241 DeviseCreateAdminUsers: migrated (0.0079s) ==================



> au = AdminUser.new
=> #<AdminUser id: nil, email: "", first_name: "", last_name: "", created_at: nil, updated_at: nil>
irb(main):002:0> au.email = 'admin@example.com'
=> "admin@example.com"
irb(main):003:0> au.first_name = 'admin'
=> "admin"
irb(main):004:0> au.last_name = 'example dot com'
=> "example dot com"
irb(main):005:0> au
=> #<AdminUser id: nil, email: "admin@example.com", first_name: "admin", last_name: "example dot com", created_at: nil, updated_at: nil>

:password_confirmation=,
 :password_confirmation,
 :password,

irb(main):007:0> au.password = 'admin'
=> "admin"
irb(main):008:0> au.password_confirmation='admin'
=> "admin"
irb(main):009:0> au.save!
  TRANSACTION (0.1ms)  begin transaction
  AdminUser Exists? (1.1ms)  SELECT 1 AS one FROM "admin_users" WHERE "admin_users"."email" = ? LIMIT ?  [["email", "admin@example.com"], ["LIMIT", 1]]
  TRANSACTION (0.1ms)  rollback transaction
/Users/benleadholm/.asdf/installs/ruby/3.1.3/lib/ruby/gems/3.1.0/gems/activerecord-7.0.4/lib/active_record/validations.rb:80:in `raise_validation_error': Validation failed: Password is too short (minimum is 6 characters) (ActiveRecord::RecordInvalid)

irb(main):010:0> au.password = 'admin00'
=> "admin00"
irb(main):011:0> au.password_confirmation = 'admin00'
=> "admin00"
irb(main):012:0> au.save!
  TRANSACTION (0.1ms)  begin transaction
  AdminUser Exists? (0.2ms)  SELECT 1 AS one FROM "admin_users" WHERE "admin_users"."email" = ? LIMIT ?  [["email", "admin@example.com"], ["LIMIT", 1]]
  AdminUser Create (5.3ms)  INSERT INTO "admin_users" ("email", "encrypted_password", "first_name", "last_name", "reset_password_token", "reset_password_sent_at", "remember_created_at", "sign_in_count", "current_sign_in_at", "last_sign_in_at", "current_sign_in_ip", "last_sign_in_ip", "failed_attempts", "unlock_token", "locked_at", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)  [["email", "admin@example.com"], ["encrypted_password", "$2a$12$XXuiDTAxYVMD6pSXzk4yg.3mNVoQVXdlQ9895OLkZWzMgFDUsnJwu"], ["first_name", "admin"], ["last_name", "example dot com"], ["reset_password_token", nil], ["reset_password_sent_at", nil], ["remember_created_at", nil], ["sign_in_count", 0], ["current_sign_in_at", nil], ["last_sign_in_at", nil], ["current_sign_in_ip", nil], ["last_sign_in_ip", nil], ["failed_attempts", 0], ["unlock_token", nil], ["locked_at", nil], ["created_at", "2023-04-12 05:46:34.596652"], ["updated_at", "2023-04-12 05:46:34.596652"]]
  TRANSACTION (1.4ms)  commit transaction
=> true

# Notes on ASDF
https://alchemist.camp/episodes/asdf-language-versions

